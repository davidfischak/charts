---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jeg-jupyterhub-ingress
  namespace: {{ .Release.Namespace }}
  labels:
    environment: jupyter-enterprise-gateway
    app: jupyter-enterprise-gateway
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: {{ .Values.certs.clusterissuer }}
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/server-snippets: |
      location / {
        proxy_set_header Upgrade $http_upgrade;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        }
spec:
  rules:
    - host: {{ .Values.domainname.jupyterhub }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: apisix-gateway
                port:
                  number: 80
  tls:
    - hosts:
        - {{ .Values.domainname.jupyterhub }}
      secretName: jeg-jupyterhub-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dedl-jeg-ingress
  namespace: {{ .Release.Namespace }}
  labels:
    environment: jupyter-enterprise-gateway
    app: jupyter-enterprise-gateway
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: {{ .Values.certs.clusterissuer }}
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/allow-snippet-annotations: "True"
    nginx.ingress.kubernetes.io/server-snippets: |
      location / {
        proxy_set_header Upgrade $http_upgrade;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        }
spec:
  rules:
    - host: {{ .Values.domainname.public }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: apisix-gateway
                port:
                  number: 80
  tls:
    - hosts:
        - {{ .Values.domainname.public }}
      secretName: public-jeg-tls
