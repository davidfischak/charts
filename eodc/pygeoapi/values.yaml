
nameOverride: ""
fullnameOverride: ""

# Default values for pygeoapi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
pygeoapi:
  replicaCount: 1

  server:

    image:
      repository: geopython/pygeoapi
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: ""

    imagePullSecrets: []

    # Parse in your local.config.yaml here. Currently only supported to pipe as a string!
    config:
      data: |
        # Default config for base Docker Image, override via DockerVolume
        # mapping with your own config.
        server:
            bind:
                host: 0.0.0.0
                port: 80
            url: http://localhost:80
            mimetype: application/json; charset=UTF-8
            encoding: utf-8
            gzip: false
            language: en-US
            cors: true
            pretty_print: true
            limit: 10
            map:
                url: https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}.png
                attribution: '<a href="https://wikimediafoundation.org/wiki/Maps_Terms_of_Use">Wikimedia maps</a> | Map data &copy; <a href="https://openstreetmap.org/copyright">OpenStreetMap contributors</a>'
            ogc_schemas_location: /schemas.opengis.net

        logging:
            level: INFO
            logfile: /tmp/pygeoapi-server.log

        metadata:
            identification:
                title: EODC Features API
                description: EODC Features API provides access to vector dataset following the OGC API - Features standard.
                keywords:
                    - Geospatial
                    - Vector
                    - OCG API
                    - Features
                keywords_type: theme
                terms_of_service: https://creativecommons.org/licenses/by/4.0/
                url: https://github.com/geopython/pygeoapi
            license:
                name: CC-BY 4.0 license
                url: https://creativecommons.org/licenses/by/4.0/
            provider:
                name: EODC Earth Observation Data Centre GmbH
                url: https://eodc.eu
            contact:
                name: Senmao, Cao
                position: Software Engineer
                address: Franz-Grill-Stra√üe 9
                city: Vienna
                stateorprovince: Vienna
                postalcode: 1030
                country: Austria
                phone: +43 699 1668 7511
                email: senmao.cao@gmail.com
                url: https://eodc.eu
                hours: Hours of Service
                instructions: During hours of service.  Off on weekends.
                role: pointOfContact

        resources:
            obs:
                type: collection
                title: Observations
                description: My cool observations
                keywords:
                    - observations
                    - monitoring
                linked-data:
                    context:
                        - datetime: https://schema.org/DateTime
                        - vocab: https://example.com/vocab#
                          stn_id: "vocab:stn_id"
                          value: "vocab:value"
                links:
                    - type: text/csv
                      rel: canonical
                      title: data
                      href: https://github.com/mapserver/mapserver/blob/branch-7-0/msautotest/wxs/data/obs.csv
                      hreflang: en-US
                    - type: text/csv
                      rel: alternate
                      title: data
                      href: https://raw.githubusercontent.com/mapserver/mapserver/branch-7-0/msautotest/wxs/data/obs.csv
                      hreflang: en-US
                extents:
                    spatial:
                        bbox: [-180,-90,180,90]
                        crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
                    temporal:
                        begin: 2000-10-30T18:24:39Z
                        end: 2007-10-30T08:57:29Z
                providers:
                    - type: feature
                      name: CSV
                      data: tests/data/obs.csv
                      id_field: id
                      geometry:
                          x_field: long
                          y_field: lat
  secret:
    create: "true"

  service:
    type: ClusterIP
    port: 80

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

postgresql:

  global:
    storageClass: ""

    # Set user and password config.
    postgresql:
      auth:
        username: ""
        database: ""
        # Value created by the helm chart
        existingSecret: "postgres-credentials"
        secretKeys:
          adminPasswordKey: ""
          userPasswordKey: ""
