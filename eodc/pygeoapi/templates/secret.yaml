apiVersion: v1
kind: Secret
metadata:
  name: "postgres-credentials"
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "postgres-credentials") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set secret values to existing secret data or generate a random one when not exists
  {{- $postgresspassword := (get $secretData "postgresPassword") | default (randAlphaNum 32 | b64enc) }}
  {{- $userpassword := (get $secretData "userPassword") | default (randAlphaNum 32 | b64enc) }}
  postgresPassword: {{ $postgresspassword | quote }}
  userPassword: {{ $userpassword | quote }}
